name: CI Pipeline

# Environment variables
env:
  PYTHON_VERSION: '3.6'
  COVERAGE_THRESHOLD: '90'
  LINT_THRESHOLD: '9.0'
  BUILD_TIMEOUT: '30'

# Workflow triggers
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Permissions configuration
permissions:
  contents: read
  actions: write
  security-events: write

# Jobs configuration
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
      
      - name: Run tests
        run: ./infrastructure/scripts/test.sh
        env:
          COVERAGE_THRESHOLD: ${{ env.COVERAGE_THRESHOLD }}
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage/
          retention-days: 14

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install quality tools
        run: |
          python -m pip install --upgrade pip
          pip install pylint black
      
      - name: Run quality checks
        run: ./infrastructure/scripts/lint.sh
        env:
          LINT_THRESHOLD: ${{ env.LINT_THRESHOLD }}

  build:
    name: Build Package
    needs: [test, quality]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build
      
      - name: Build package
        run: ./infrastructure/scripts/build.sh
        timeout-minutes: ${{ env.BUILD_TIMEOUT }}
      
      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: todo-app-package
          path: dist/
          retention-days: 30

# Global error handling configuration
defaults:
  run:
    shell: bash

strategy:
  fail-fast: true
  max-parallel: 2